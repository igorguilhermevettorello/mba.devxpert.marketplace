@using MBA.Marketplace.MVC.Extensions;
@using MBA.Marketplace.MVC.ViewModels;
@using MBA.Marketplace.Business.Enums;
@model List<ProdutoViewModel>
@{
    ViewData["Title"] = "Listar Produtos";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var isAdmin = User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value == TipoUsuario.Administrador.ToString();
    var isVendedor = User.FindFirst(System.Security.Claims.ClaimTypes.Role)?.Value == TipoUsuario.Vendedor.ToString();
}

@if (!string.IsNullOrEmpty(ViewBag.Erro))
{
    <div class="alert alert-danger d-flex align-items-center mb-4" role="alert">
        <i class="bi bi-exclamation-triangle-fill me-2"></i>
        <div>@ViewBag.Erro</div>
    </div>
}
else
{
    <!-- Card com a tabela -->
    <div class="card shadow-sm border-0">
        <div class="card-header bg-light border-bottom-0 py-3">
            <div class="d-flex justify-content-between align-items-center">
                <h6 class="card-title mb-0 text-secondary fw-semibold">
                    <i class="bi bi-list-ul me-2"></i>Lista de Produtos
                </h6>
                <div class="d-flex gap-2 align-items-center">
                    <span class="badge bg-success-subtle text-success border border-success-subtle">
                        <i class="bi bi-circle-fill me-1" style="font-size: 8px;"></i>Ativo
                    </span>
                    <span class="badge bg-danger-subtle text-danger border border-danger-subtle">
                        <i class="bi bi-circle-fill me-1" style="font-size: 8px;"></i>Inativo
                    </span>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead class="table-light">
                            <tr>
                                <th class="px-3 py-3 border-0">
                                    <i class="bi bi-image me-2 text-muted"></i>Imagem
                                </th>
                                <th class="px-3 py-3 border-0">
                                    <i class="bi bi-box me-2 text-muted"></i>Produto
                                </th>
                                <th class="px-3 py-3 border-0">
                                    <i class="bi bi-currency-dollar me-2 text-muted"></i>Preço
                                </th>
                                <th class="px-3 py-3 border-0">
                                    <i class="bi bi-boxes me-2 text-muted"></i>Estoque
                                </th>
                                <th class="px-3 py-3 border-0">
                                    <i class="bi bi-tag me-2 text-muted"></i>Categoria
                                </th>
                                <th class="px-3 py-3 border-0 text-center">
                                    <i class="bi bi-activity me-2 text-muted"></i>Status
                                </th>
                                <th class="px-3 py-3 border-0 text-center">
                                    <i class="bi bi-gear me-2 text-muted"></i>Ações
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var produto in Model)
                            {
                                <tr class="border-bottom border-light">
                                    <td class="px-3 py-3">
                                        <div class="product-image-container">
                                            <img class="product-image" src="@Html.CheckImage(produto.Src)" 
                                            onerror="this.onerror=null; this.src='/images/foto-indisponivel.png';" 
                                            alt="@produto.Nome" />
                                        </div>
                                    </td>
                                    <td class="px-3 py-3">
                                        <div>
                                            <span class="fw-semibold text-dark d-block">@produto.Nome</span>
                                            <small class="text-muted">@produto.Descricao</small>
                                        </div>
                                    </td>
                                    <td class="px-3 py-3">
                                        <span class="fw-semibold text-success">@produto.Preco.ToPtBrCurrency()</span>
                                    </td>
                                    <td class="px-3 py-3">
                                        <span class="badge @(produto.Estoque > 10 ? "bg-success-subtle text-success" : produto.Estoque > 0 ? "bg-warning-subtle text-warning" : "bg-danger-subtle text-danger")">
                                            @produto.Estoque un.
                                        </span>
                                    </td>
                                    <td class="px-3 py-3">
                                        <span class="badge bg-info-subtle text-info border border-info-subtle">
                                            @produto.Categoria.Nome
                                        </span>
                                    </td>
                                    <td class="px-3 py-3 text-center">
                                        @if (produto.Ativo)
                                        {
                                            <span class="badge bg-success-subtle text-success border border-success-subtle px-3 py-2">
                                                <i class="bi bi-check-circle-fill me-2"></i>Ativo
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger-subtle text-danger border border-danger-subtle px-3 py-2">
                                                <i class="bi bi-x-circle-fill me-2"></i>Inativo
                                            </span>
                                        }
                                    </td>
                                    <td class="px-3 py-3 text-center">
                                        <div class="btn-group" role="group">

                                            <a class="btn btn-outline-info btn-sm" title="Visualizar" href="@Url.Action("detalhes", "produto", new { id = produto.Id })">
                                                <i class="bi bi-eye"></i>
                                            </a>

                                            @if (isVendedor)
                                            {
                                                <a class="btn btn-outline-application btn-sm" title="Editar" href="@Url.Action("editar", "produto", new { id = produto.Id })">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                            }

                                            @if (isAdmin)
                                            {
                                                @if (produto.Ativo)
                                                {
                                                    <button type="button"
                                                            class="btn btn-outline-danger btn-sm"
                                                            data-id="@produto.Id"
                                                            onclick="inativarProduto(this, event)"
                                                            title="Inativar produto">
                                                        <i class="bi bi-eye-slash"></i>
                                                    </button>
                                                }
                                                else
                                                {
                                                    <button type="button"
                                                            class="btn btn-outline-success btn-sm"
                                                            data-id="@produto.Id"
                                                            onclick="ativarProduto(this, event)"
                                                            title="Ativar produto">
                                                        <i class="bi bi-eye"></i>
                                                    </button>
                                                }
                                            }
                                             
                                            @if (isVendedor)
                                            {
                                                <button onclick="deletarProduto(this, event)" 
                                                        class="btn btn-outline-danger btn-sm" 
                                                        title="Remover" 
                                                        data-id="@produto.Id">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <div class="text-muted mb-3">
                        <i class="bi bi-box-seam" style="font-size: 3rem;"></i>
                    </div>
                    <h5 class="text-muted mb-2">Nenhum produto encontrado</h5>
                    <p class="text-muted small mb-3">Ainda não há produtos cadastrados no sistema.</p>
                </div>
            }
        </div>
    </div>
}

@section Scripts {
    <style>
        .product-image-container {
            width: 60px;
            height: 60px;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .product-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.2s ease;
        }
        
        .product-image:hover {
            transform: scale(1.05);
        }
        
        .product-image-container-small {
            width: 50px;
            height: 50px;
            border-radius: 6px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .product-image-small {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        
        .card {
            transition: box-shadow 0.3s ease;
        }
        
        .card:hover {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
        }
        
        .table tbody tr {
            transition: background-color 0.2s ease;
        }
        
        .table tbody tr:hover {
            background-color: rgba(0, 123, 255, 0.05);
        }
        
        .btn {
            transition: all 0.2s ease;
        }
        
        .btn:hover {
            transform: translateY(-1px);
        }
        
        .modal-content {
            border-radius: 15px;
        }
        
        .badge {
            font-size: 0.8em;
            font-weight: 500;
        }
    </style>

    <script>
        function configurarModalProduto(titulo, mensagem, statusAtual, classBotao, textoBotao) {
            $('#tituloConfirmacaProduto').text(titulo);
            $('#mensagemConfirmacaProduto').text(mensagem);
            $('#nomeProduto').text(nomeProdutoAtual);
            $('#statusAtualProduto').text(statusAtual);
            $('#precoProduto').text(precoProdutoAtual);
            $('#imagemProdutoModal').attr('src', imagemProdutoAtual);
            $('#imagemProdutoModal').attr('alt', nomeProdutoAtual);

            const btnConfirmar = $('#btnConfirmarAcaoProduto');
            btnConfirmar.removeClass('btn-primary btn-danger btn-success').addClass(classBotao);
            btnConfirmar.html(`<i class="bi bi-check-lg me-1"></i>${textoBotao}`);

            // Remover event listeners anteriores e adicionar o novo
            btnConfirmar.off('click').on('click', executarAcaoProduto);
        }
    </script>
    
    @if (isAdmin)
    {
        <script>

            const urlTrocarStatusProduto = "@Url.Action("trocar-status", "Produto")";
            
            function inativarProduto(element, event) {
                event.preventDefault();

                const tr = $(element).closest('tr');
                produtoIdAtual = $(element).data('id');
                nomeProdutoAtual = tr.find('span.fw-semibold').text();
                precoProdutoAtual = tr.find('span.fw-semibold.text-success').text();
                imagemProdutoAtual = tr.find('.product-image').attr('src');
                acaoAtual = 'inativar';

                configurarModalProduto(
                    'Inativar Produto',
                    'Tem certeza que deseja inativar este produto?',
                    'Ativo',
                    'btn-danger',
                    'Inativar'
                );

                const modal = new bootstrap.Modal(document.getElementById('modalConfirmarProduto'));
                modal.show();
            }

            function ativarProduto(element, event) {
                event.preventDefault();

                const tr = $(element).closest('tr');
                produtoIdAtual = $(element).data('id');
                nomeProdutoAtual = tr.find('span.fw-semibold').text();
                precoProdutoAtual = tr.find('span.fw-semibold.text-success').text();
                imagemProdutoAtual = tr.find('.product-image').attr('src');
                acaoAtual = 'ativar';

                configurarModalProduto(
                    'Ativar Produto',
                    'Tem certeza que deseja ativar este produto?',
                    'Inativo',
                    'btn-success',
                    'Ativar'
                );

                const modal = new bootstrap.Modal(document.getElementById('modalConfirmarProduto'));
                modal.show();
            }

            function executarAcaoProduto() {
                if (!produtoIdAtual || !acaoAtual) return;

                let url, novoStatus, mensagemSucesso, metodoHttp;

                switch(acaoAtual) {
                    case 'inativar':
                        url = urlTrocarStatusProduto;
                        novoStatus = 'Inativo';
                        mensagemSucesso = 'Produto inativado com sucesso!';
                        metodoHttp = 'POST';
                        break;
                    case 'ativar':
                        url = urlTrocarStatusProduto;
                        novoStatus = 'Ativo';
                        mensagemSucesso = 'Produto ativado com sucesso!';
                        metodoHttp = 'POST';
                        break;
                }

                // Mostrar spinner e desabilitar botão
                $('#spinnerProduto').removeClass('d-none');
                $('#btnConfirmarAcaoProduto').prop('disabled', true);

                $.ajax({
                    url: `${url}/${produtoIdAtual}`,
                    type: metodoHttp,
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        $('#modalConfirmarProduto').modal('hide');
                        mostrarResultadoProduto(mensagemSucesso, novoStatus, true);
                    },
                    error: function (xhr, status, error) {
                        $('#modalConfirmarProduto').modal('hide');
                        const mensagemErro = xhr.responseJSON?.message ||
                            `Erro ao ${acaoAtual} produto. Tente novamente.`;
                        mostrarResultadoProduto(mensagemErro, null, false);
                    },
                    complete: function () {
                        $('#spinnerProduto').addClass('d-none');
                        $('#btnConfirmarAcaoProduto').prop('disabled', false);
                    }
                });
            }
        </script>
    }

    @if (isVendedor)
    {
        <script>
            const urlDeletarProduto = "@Url.Action("deletar", "produto")";
            function deletarProduto(element, event) {
                event.preventDefault();

                const tr = $(element).closest('tr');
                produtoIdAtual = $(element).data('id');
                nomeProdutoAtual = tr.find('span.fw-semibold').text();
                precoProdutoAtual = tr.find('span.fw-semibold.text-success').text();
                imagemProdutoAtual = tr.find('.product-image').attr('src');
                acaoAtual = 'deletar';

                configurarModalProduto(
                    'Remover Produto',
                    'Tem certeza que deseja remover este produto permanentemente?',
                    'Será removido',
                    'btn-danger',
                    'Remover'
                );

                const modal = new bootstrap.Modal(document.getElementById('modalConfirmarProduto'));
                modal.show();
            }

            function executarAcaoProduto() {
                if (!produtoIdAtual || !acaoAtual) return;

                let url, novoStatus, mensagemSucesso, metodoHttp;

                switch(acaoAtual) {
                    case 'deletar':
                        url = urlDeletarProduto;
                        novoStatus = null;
                        mensagemSucesso = 'Produto removido com sucesso!';
                        metodoHttp = 'DELETE';
                        break;
                }

                // Mostrar spinner e desabilitar botão
                $('#spinnerProduto').removeClass('d-none');
                $('#btnConfirmarAcaoProduto').prop('disabled', true);

                $.ajax({
                    url: `${url}/${produtoIdAtual}`,
                    type: metodoHttp,
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        $('#modalConfirmarProduto').modal('hide');
                        mostrarResultadoProduto(mensagemSucesso, novoStatus, true);
                    },
                    error: function (xhr, status, error) {
                        $('#modalConfirmarProduto').modal('hide');
                        const mensagemErro = xhr.responseJSON?.message ||
                            `Erro ao ${acaoAtual} produto. Tente novamente.`;
                        mostrarResultadoProduto(mensagemErro, null, false);
                    },
                    complete: function () {
                        $('#spinnerProduto').addClass('d-none');
                        $('#btnConfirmarAcaoProduto').prop('disabled', false);
                    }
                });
            }
        </script>
    }

}
